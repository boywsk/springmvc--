package com.gomeplus.im.api.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.gomeplus.im.api.request.ReqFriend;
import com.gomeplus.im.api.request.response.ResultModel;
import com.gomeplus.im.api.service.FriendService;

@Controller
@RequestMapping("friend")
public class FriendController {
	 Logger log = LoggerFactory.getLogger(FriendController.class);
	@Autowired
	private FriendService friendService;
	
	/**
	 * 添加好友
	 * @param req
	 * @return
	 */
	@RequestMapping(value = "addFriend", method = RequestMethod.POST)
	@ResponseBody
	public ResultModel<Object> addFriend(@RequestBody ReqFriend req){
		    log.info("addFriend");
	        log.info("parms:"+ JSON.toJSONString(req));
	        return friendService.addFriend(req);
	}
    /**
     * 好友申请审核
     * @param reqFriend
     */
    @RequestMapping(value = "auditFriend", method = RequestMethod.POST)
    @ResponseBody
    public ResultModel<Object> auditFriend(@RequestBody ReqFriend req) {
        log.info("auditFriend");
        log.info("parms:"+ JSON.toJSONString(req));
        return friendService.auditFriend(req);
    }
    /**
     * 删除好友关系
     * @param reqFriend
     */
    @RequestMapping(value = "delFriend", method = RequestMethod.POST)
    @ResponseBody
    public ResultModel<Object> delFriend(@RequestBody ReqFriend req) {
        log.info("delFriend");
        log.info("parms:"+ JSON.toJSONString(req));
        return friendService.delFriend(req);
    }
    
    /**
     * 修改好友备注
     * @param reqFriend
     */
    @RequestMapping(value = "editMark", method = RequestMethod.POST)
    @ResponseBody
    public ResultModel<Object> editMark(@RequestBody ReqFriend req) {
        log.info("setMark");
        log.info("parms:"+ JSON.toJSONString(req));
        return friendService.updateMark(req);
    }
    
    /**
     * 获取好友关系列表
     * @param reqFriend
     */
    @RequestMapping(value = "listFriend", method = RequestMethod.POST)
    @ResponseBody
    public ResultModel<Object> listFriend(@RequestBody ReqFriend req) {
        log.info("listFriend");
        log.info("parms:"+ JSON.toJSONString(req));
        return friendService.listFriend(req);
    }
}
